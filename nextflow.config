#!/usr/bin/env nextflow
//=========  Nextflow//Pipeline/Container Config  ==========

manifest {
    name = "SV_Paired_BAM"
    description = 'Structural variation workflow for BAM files'
    author = 'Anuj Srivastava, Rupesh Kesharwani, Mike Lloyd, Benjamin Leopold'
    mainScript = "main.nf"
    nextflowVersion = '!>=20.04.0'
    version = "0.14.10"
}

// Include JAX Universal Config Settings
univcfg = new File("$projectDir/universal.config")
if (univcfg.canRead()) { includeConfig univcfg }
else {
    profiles {
        standard { process.executor = "local" }
        sumner {
            process.executor = "slurm"
            process.module = "slurm"
            process.clusterOptions = "-q batch"
        }
    }
}

////// Included Default Config Settings \\\\\\
// -c  params.config // presume passed before 'run' for ALL user param mods!!

params.email = params.email ?: "$USER@jax.org"
params.outputDir = params.outputDir ?: "${manifest.name}_results"

process {
    errorStrategy = { task.attempt <= 2 ? "retry" : "terminate" } // retry<=2: 3 tries

    cpus = { 1 * task.attempt };
    time = { 12.hour * task.attempt }
    memory = { 16.GB * task.attempt }

    //TODO: update SIF URLs to jaxreg and quay.io, etc; then test, test, test away!
    simgPath  = "$projectDir/images"
    withLabel: bcftools     { container = "file://${simgPath}/bcftools__v1.10.2__dceoy.sif" }
    withLabel: bedtools     { container = "library://atac-seq/bedtools-bash:v2.9.2" }
    withLabel: breakdancer  { container = "file://${simgPath}/breakdancer__1.4.5__szarate.sif"
                              time = { 8.hour * task.attempt };
                              }
    withLabel: delly        { container = "file://${simgPath}/delly-bash__0.8.3__dellytools.sif"
                              time = { 24.hour * task.attempt };
                              }
    withLabel: lumpy_sams   { container = "file://${simgPath}/lumpy-sams__0.2.13__kfdrc.sif" }
                              //NOTE: lumpy with samtools v1.8
    withLabel: manta        { container = "file://${simgPath}/manta__1.4.0__mods-kfdrc.sif"
                              time = { 24.hour * task.attempt };
                              }
    withLabel: picard       { container = "file://${simgPath}/picard__v2.23.3__bleopold.sif" }
    withLabel: python3      { container = "file://${simgPath}/python3-pysam-utils_3.8.5.sif" }
    withLabel: samtools     { container = "file://${simgPath}/samtools__1.10__dceoy.sif" }
    withLabel: survivor     { container = "file://${simgPath}/survivor-fritzsedlazeck__1.0.7.sif" }
     withName: survivor_merge_sv_vcf { 
                              time = { 2.hour * task.attempt };
                              memory = { 50.GB * task.attempt };
                              }
}

notification {
    enabled = true
    to = params.email
    from = "nxf-${manifest.name}"
}

singularity {
    enabled = true
    process.module = "singularity"
    cacheDir = "${process.simgPath}/cache"
    autoMounts = true
    runOptions = ''
    engineOptions = ''
}

env {
    NXF_ANSI_SUMMARY = true
    NXF_ANSI_LOG = true
    NXF_DEBUG = 1
}

timeline {
    enabled = true
    file = "${params.outputDir}/nxf_status/timeline.html"
}

report {
    enabled = true
    file = "${params.outputDir}/nxf_status/report.html"
}

weblog {
    enabled = true
}

trace {
    enabled = true
    file = "${params.outputDir}/nxf_status/trace.txt"
    fields = ""\
       + "task_id,"   \
       + "hash,"      \
       + "process,"   \
       + "tag,"       \
       + "status,"    \
       + "exit,"      \
       + "start,"     \
       + "container," \
       + "cpus,"      \
       + "time,"      \
       + "disk,"      \
       + "memory,"    \
       + "duration,"  \
       + "realtime,"  \
       + "queue,"     \
       + "%cpu,"      \
       + "%mem,"      \
       + "rss,"       \
       + "vmem,"      \
       + "rchar,"     \
       + "wchar"
    }

// vim: set ft=groovy.nextflow ts=4 sw=0 tw=100 et fdm=syntax:
